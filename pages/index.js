import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Form from "@/components/Form";
import { useEffect, useState } from "react";
import { uid } from "uid";
import useLocalStorageState from "use-local-storage-state";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [activities, setActivities] = useLocalStorageState("activities", {
    defaultValue: [
      { name: "One", isForGoodWeather: true, key: uid() },
      { name: "Two", isForGoodWeather: false, key: uid() },
    ],
  });
  const [weather, setWeather] = useState({});
  const [counter, setCounter] = useState(0);

  const url = "https://example-apis.vercel.app/api/weather";

  function runCounter() {
    setCounter(counter + 1);
  }

  useEffect(() => {
    async function getWeather() {
      try {
        const result = await fetch(url);
        if (result.ok) {
          const data = await result.json();
          setWeather(data);
        } else {
          console.log("result not ok");
        }
      } catch (error) {
        console.log(error);
      }
    }
    let timerId;
    function timer() {
      timerId = setTimeout(runCounter, 5000);
    }
    timer();
    getWeather();
  }, [counter]);

  const filteredActivities = activities?.filter(
    (activity) => activity?.isForGoodWeather === weather?.isGoodWeather
  );

  function handleAddActivity(newActivity) {
    const superNewActivity = { ...newActivity, key: uid() };
    setActivities([superNewActivity, ...activities]);
  }

  function handleDelete(key) {
    console.log(key);
    setActivities(activities.filter((activity) => key !== activity.key));
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Form
          onAddActivity={(newActivity) => handleAddActivity(newActivity)}
        ></Form>
        <h2>
          {weather?.isGoodWeather ? "Good Weather" : "Bad Weather"}
          {weather.condition}, Temperature: {weather.temperature}
        </h2>
        <ul>
          {filteredActivities?.map((activity) => {
            return (
              <li key={uid()}>
                {activity?.name}
                <button key={uid()} onClick={() => handleDelete(activity.key)}>
                  Delete
                </button>{" "}
              </li>
            );
          })}
        </ul>
      </main>
    </>
  );
}
